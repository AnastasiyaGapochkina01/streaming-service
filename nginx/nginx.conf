worker_processes auto;
rtmp_auto_push on;

events {
    worker_connections 1024;
}

http {
    include       mime.types;
    default_type  application/octet-stream;
    
    # Basic settings
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;

    # Buffer settings for large uploads
    client_body_buffer_size 512k;
    client_max_body_size 512M;  # Увеличиваем до 512MB
    client_body_timeout 300s;
    client_header_timeout 300s;
    send_timeout 300s;

    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types
        application/atom+xml
        application/javascript
        application/json
        application/ld+json
        application/manifest+json
        application/rss+xml
        application/vnd.geo+json
        application/vnd.ms-fontobject
        application/x-font-ttf
        application/x-web-app-manifest+json
        application/xhtml+xml
        application/xml
        font/opentype
        image/bmp
        image/svg+xml
        image/x-icon
        text/cache-manifest
        text/css
        text/plain
        text/vcard
        text/vnd.rim.location.xloc
        text/vtt
        text/x-component
        text/x-cross-domain-policy;

    server {
        listen 80;
        server_name _;
        
        # Увеличиваем таймауты для больших загрузок
        proxy_connect_timeout 600s;
        proxy_send_timeout 600s;
        proxy_read_timeout 600s;

        # HLS segments
        location /hls {
            types {
                application/vnd.apple.mpegurl m3u8;
                video/mp2t ts;
            }
            root /tmp;
            add_header Cache-Control no-cache;
            add_header Access-Control-Allow-Origin *;
            add_header Access-Control-Allow-Headers *;
            add_header Access-Control-Allow-Methods 'GET, POST, OPTIONS';
            
            # CORS preflight
            if ($request_method = 'OPTIONS') {
                add_header Access-Control-Allow-Origin '*';
                add_header Access-Control-Allow-Methods 'GET, POST, OPTIONS';
                add_header Access-Control-Allow-Headers '*';
                add_header Access-Control-Max-Age 86400;
                return 204;
            }
        }

        # DASH segments
        location /dash {
            root /tmp;
            add_header Cache-Control no-cache;
            add_header Access-Control-Allow-Origin *;
            add_header Access-Control-Allow-Headers *;
        }

        # Frontend static files
        location / {
            root /var/www/html;
            index index.html;
            try_files $uri $uri/ /index.html;
            
            # Cache static assets
            location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg)$ {
                expires 1y;
                add_header Cache-Control "public, immutable";
            }
        }

        # Backend API proxy - УВЕЛИЧИВАЕМ ЛИМИТЫ ДЛЯ API
        location /api/ {
            proxy_pass http://backend:3000;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Увеличиваем лимиты для загрузки файлов через API
            client_max_body_size 512M;
            client_body_buffer_size 512k;
            proxy_connect_timeout 600s;
            proxy_send_timeout 600s;
            proxy_read_timeout 600s;
            proxy_buffering off;
        }

        # Health check endpoint
        location /health {
            proxy_pass http://backend:3000/health;
            proxy_set_header Host $host;
            access_log off;
        }

        # Статика для медиа (если нужно отдавать медиа через nginx)
        location /media/ {
            alias /var/www/media/;
            expires 1y;
            add_header Cache-Control "public, immutable";
            add_header Access-Control-Allow-Origin *;
        }
    }
}

rtmp {
    server {
        listen 1935;
        chunk_size 4096;
        buflen 2s;
        max_streams 128;
        ack_window 5000000;
        
        allow publish all;
        allow play all;

        application live {
            live on;
            record off;
            meta copy;
            wait_key on;
            wait_video on;
            publish_notify on;
            drop_idle_publisher 10s;
            
            # HLS configuration
            hls on;
            hls_path /tmp/hls;
            hls_fragment 4s;
            hls_playlist_length 120s;
            hls_sync 2ms;
            hls_continuous on;
            hls_nested on;
            hls_cleanup on;
            hls_type live;
            
            # DASH configuration
            dash on;
            dash_path /tmp/dash;
            dash_fragment 4s;
            dash_playlist_length 120s;
            
            # Callbacks for stream lifecycle
            on_publish http://backend:3000/api/streams/start;
            on_publish_done http://backend:3000/api/streams/end;
            on_update http://backend:3000/api/streams/update;
            on_play http://backend:3000/api/streams/play;
            on_play_done http://backend:3000/api/streams/play_done;
            
            # Recording (optional)
            # record all;
            # record_path /tmp/records;
            # record_unique on;
            # record_suffix -%d-%b-%y-%T.flv;
        }
        
        # VOD application for pre-recorded content
        application vod {
            play /var/vod;
        }
    }
}
