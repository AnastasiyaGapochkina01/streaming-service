worker_processes auto;
rtmp_auto_push on;

events {
    worker_connections 1024;
}

http {
    include       mime.types;
    default_type  application/octet-stream;

    sendfile        on;
    keepalive_timeout  65;

    # Upstream for backend
    upstream backend {
        server backend:3000;
    }

    server {
        listen 80;
        server_name localhost;

        # Serve frontend static files
        location / {
            root /www/static;
            index index.html index.htm;
            try_files $uri $uri/ /index.html;
        }

        # HLS segments
        location /hls {
            types {
                application/vnd.apple.mpegurl m3u8;
                video/mp2t ts;
            }
            root /tmp;
            add_header Cache-Control no-cache;
            add_header Access-Control-Allow-Origin *;
            
            # CORS preflight
            if ($request_method = 'OPTIONS') {
                add_header Access-Control-Allow-Origin '*';
                add_header Access-Control-Allow-Methods 'GET, OPTIONS';
                add_header Access-Control-Allow-Headers '*';
                add_header Access-Control-Max-Age 1728000;
                add_header Content-Type 'text/plain charset=UTF-8';
                add_header Content-Length 0;
                return 204;
            }
        }

        # Recorded files
        location /records {
            root /tmp;
            add_header Access-Control-Allow-Origin *;
        }

        # API proxy
        location /api/ {
            proxy_pass http://backend;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # CORS headers
            add_header Access-Control-Allow-Origin *;
            add_header Access-Control-Allow-Methods "GET, POST, OPTIONS";
            add_header Access-Control-Allow-Headers "Origin, X-Requested-With, Content-Type, Accept, Authorization";
            
            # Handle preflight
            if ($request_method = 'OPTIONS') {
                add_header Access-Control-Allow-Origin '*';
                add_header Access-Control-Allow-Methods 'GET, POST, OPTIONS';
                add_header Access-Control-Allow-Headers '*';
                add_header Access-Control-Max-Age 1728000;
                add_header Content-Length 0;
                add_header Content-Type 'text/plain; charset=utf-8';
                return 204;
            }
        }

        # Health check
        location /health {
            proxy_pass http://backend/health;
            proxy_set_header Host $host;
        }
    }
}

rtmp {
    server {
        listen 1935;
        chunk_size 4096;
        ping 30s;
        notify_method get;

        application live {
            live on;
            record all;
            record_path /tmp/records;
            record_unique on;
            record_suffix -%Y-%m-%d-%H_%M_%S.flv;
            
            # Convert to HLS
            hls on;
            hls_path /tmp/hls;
            hls_fragment 3s;
            hls_playlist_length 60s;
            
            # Callbacks
            on_publish http://backend:3000/api/stream/start;
            on_done http://backend:3000/api/stream/end;
            on_play http://backend:3000/api/stream/play;
            on_record_done http://backend:3000/api/stream/upload;
            
            # Clean up
            hls_cleanup on;
            hls_nested on;
            
            # Allow publishing from any IP (adjust for production)
            allow publish all;
            allow play all;
        }
    }
}